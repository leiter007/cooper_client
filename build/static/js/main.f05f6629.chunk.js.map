{"version":3,"sources":["Modules/CooperCalculator.js","Modules/Auth.js","Modules/PerformanceData.js","Components/DisplayCooperResult.jsx","Components/InputFields.jsx","Components/LoginForm.jsx","Components/DisplayPerformanceData.jsx","App.js","serviceWorker.js","index.js"],"names":["CooperCalculator","distance","gender","age","ratingIndex","ageRange","ageRangeTable","parseInt","female","13-14","15-16","17-19","20-29","30-39","40-49","50+","male","toLowerCase","forEach","dRange","index","match","slice","minMax","split","min","max","authenticate","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","email","password","response","wrap","_context","prev","next","apiUrl","axios","post","sent","storeAuthCredentials","sessionStorage","setItem","JSON","stringify","id","data","abrupt","authenticated","t0","message","errors","stop","_x","_x2","apply","this","arguments","_ref2","headers","Promise","resolve","uid","client","accessToken","expiry","access_token","token_type","saveData","result","getItem","parse","objectSpread","Content-type","Accept","reject","performance_data","then","getData","_callee2","_context2","get","DisplayCooperResult","props","calculate","entryHandler","console","log","results","saveButton","entrySaved","react_default","createElement","Fragment","Button","compact","color","onClick","saveCooperData","bind","Message","Component","InputFields","genderOptions","text","value","Form","type","Field","inline","Dropdown","selection","defaultValue","options","onChange","e","handleGenderChange","Label","pointing","Divider","horizontal","Input","fluid","placeholder","inputChangeHandler","LoginForm","loginHandler","DisplayPerformanceData","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","performanceData","getPerformanceData","setState","entries","_this2","indexUpdated","dataIndex","distances","dates","lineChartData","datasets","label","labels","updateIndex","entry","dateString","created_at","dateObj","Date","momentString","moment","format","push","length","numOfExcellent","b","numOfAboveAverage","c","numOfAverage","d","numOfBelowAverage","numOfPoor","map","item","key","Segment","es","scales","yAxes","ticks","beginAtZero","backgroundColor","borderColor","borderWidth","responsive","xAxes","maxRotation","minRotation","App","renderLoginForm","renderIndex","preventDefault","resp","event","_this$setState","defineProperty","target","renderLogin","user","performanceDataIndex","Components_DisplayPerformanceData","Components_LoginForm","onLogin","Container","Header","as","textAlign","Components_InputFields","Components_DisplayCooperResult","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f05f6629.chunk.js","sourcesContent":["export const CooperCalculator = (distance, gender, age) => {\n\n  const ratings = [\n    'Excellent',\n    'Above average',\n    'Average',\n    'Below average',\n    'Poor'\n  ];\n\n  const cooperTable = {\n    female: {\n      '13-14': ['>2000', '1900-1999', '1600-1899', '1500-1599', '<1500'],\n      '15-16': ['>2100', '2000-2099', '1700-1999', '1600-1699', '<1600'],\n      '17-19': ['>2300', '2100-2299', '1800-2099', '1700-1799', '<1700'],\n      '20-29': ['>2700', '2200-2699', '1800-2199', '1500-1799', '<1500'],\n      '30-39': ['>2500', '2000-2499', '1700-1999', '1400-1699', '<1400'],\n      '40-49': ['>2300', '1900-2299', '1500-1899', '1200-1499', '<1200'],\n      '50+': ['>2200', '1700-2199', '1400-1699', '1100-1399', '<1100']\n    },\n    male: {\n      '13-14': ['>2700', '2400-2699', '2200-2399', '2100-2199', '<2100'],\n      '15-16': ['>2800', '2500-2799', '2300-2499', '2200-2299', '<2200'],\n      '17-19': ['>3000', '2700-2999', '2500-2699', '2300-2499', '<2300'],\n      '20-29': ['>2800', '2400-2799', '2200-2399', '1600-2199', '<1600'],\n      '30-39': ['>2700', '2300-2699', '1900-2299', '1500-1999', '<1500'],\n      '40-49': ['>2500', '2100-2499', '1700-2099', '1400-1699', '<1400'],\n      '50+': ['>2400', '2000-2399', '1600-1999', '1300-1599', '<1300']\n    }\n  };\n\n  const ageRangeTable = age => {\n    switch (true) {\n      case age >= 13 && age <= 14:\n        return '13-14';\n      case age >= 15 && age <= 16:\n        return '15-16';\n      case age >= 17 && age <= 19:\n        return '17-19';\n      case age >= 20 && age <= 29:\n        return '20-29';\n      case age >= 30 && age <= 39:\n        return '30-39';\n      case age >= 40 && age <= 49:\n        return '40-49';\n      case age >= 50:\n        return '50+';\n      default:\n        return 'invalid range';\n    }\n  }\n\n  const ageRange = ageRangeTable(parseInt(age));\n\n  if (ageRange === 'invalid range') {\n    return 'Invalid age range';\n  }\n\n  const distanceRanges = cooperTable[gender.toLowerCase()][\n    ageRange\n  ];\n\n  let ratingIndex;\n\n  distanceRanges.forEach((dRange, index) => {\n    if (\n      (dRange.match(/>\\d*/) && distance >= parseInt(dRange.slice(1), 10)) ||\n      (dRange.match(/<\\d*/) && distance < parseInt(dRange.slice(1), 10))\n    ) {\n      ratingIndex = index;\n    } else {\n      const minMax = dRange.split('-');\n      const min = parseInt(minMax[0], 10);\n      const max = parseInt(minMax[1], 10);\n\n      if (distance >= min && distance <= max) {\n        ratingIndex = index;\n      }\n    }\n  });\n  return ratings[ratingIndex];\n}\n\nexport default CooperCalculator;\n","import axios from 'axios'\n\nconst apiUrl = 'https://cooper-felix-george.herokuapp.com/api/v1';\n\nconst authenticate = async (email, password) => {\n  const path = apiUrl + '/auth/sign_in';\n  try {\n    let response = await axios.post(path, { email: email, password: password })\n    await storeAuthCredentials(response)\n    sessionStorage.setItem('current_user', JSON.stringify({ id: response.data.data.id }));\n    return { authenticated: true }\n  } catch (error) {\n    return { authenticated: false, message: error.response.data.errors[0] }\n  }\n};\n\nconst storeAuthCredentials = ({ data, headers }) => {\n  return new Promise((resolve) => {\n    const uid = headers['uid'],\n      client = headers['client'],\n      accessToken = headers['access-token'],\n      expiry = headers['expiry'];\n\n    sessionStorage.setItem('credentials', JSON.stringify({\n      uid: uid,\n      client: client,\n      access_token: accessToken,\n      expiry: expiry,\n      token_type: 'Bearer'\n    }));\n    resolve(true)\n  })\n};\n\nexport { authenticate, storeAuthCredentials }\n","import axios from 'axios'\nimport { storeAuthCredentials } from './Auth'\n\nconst apiUrl = 'https://cooper-felix-george.herokuapp.com/api/v1';\n\nconst saveData = async (result, distance) => {\n  let headers = await sessionStorage.getItem(\"credentials\");\n  headers = JSON.parse(headers);\n  headers = {\n    ...headers,\n    \"Content-type\": \"application/json\",\n    Accept: \"application/json\"\n  };\n  const path = apiUrl + '/performance_data';\n  return new Promise((resolve, reject) => {\n    axios.post(path, {\n      performance_data: { data: { message: result, distance: distance }}\n    }, {\n      headers: headers\n    })\n    .then(response => {\n      storeAuthCredentials(response);\n      resolve(response.data.message);\n    });  \n  });\n};\n\nconst getData = async () => {\n  let headers = await sessionStorage.getItem(\"credentials\");\n  headers = JSON.parse(headers);\n  headers = {\n    ...headers,\n    \"Content-type\": \"application/json\",\n    Accept: \"application/json\"\n  };\n  const path = apiUrl + \"/performance_data\";\n  return new Promise((resolve, reject) => {\n    axios\n      .get(path, {\n        headers: headers\n      })\n      .then(response => {\n        storeAuthCredentials(response);\n        resolve(response);\n      });\n  });\n};\n\nexport { getData, saveData }","import React, { Component } from 'react';\nimport CooperCalculator from '../Modules/CooperCalculator';\nimport {saveData} from '../Modules/PerformanceData';\nimport { Button, Message } from 'semantic-ui-react'\n\nclass DisplayCooperResult extends Component {\n\n  calculate() {\n    return CooperCalculator(this.props.distance, this.props.gender, this.props.age);\n  }\n\n  async saveCooperData() {\n    const result = this.calculate();\n    try {\n      await saveData(result, this.props.distance);\n      this.props.entryHandler();\n    } catch(error) {\n      console.log(error);\n    }\n  }\n\n  render() {\n    let results;\n    let saveButton;\n\n    if (this.props.authenticated === true && this.props.entrySaved === false) {\n      saveButton = (\n        <>\n          <Button compact color=\"teal\" id=\"save-result\" onClick={this.saveCooperData.bind(this)}>Save entry</Button>\n        </>\n      )\n    } else if (this.props.authenticated === true && this.props.entrySaved === true) {\n      saveButton = (\n        <>\n          <Message>\n            <p>Your entry was saved</p>\n          </Message>\n        </>\n      )\n    }\n\n    if (this.props.age !== '' && this.props.distance !== '') {\n      results =\n        <>\n          <p>{this.props.age} y/o {this.props.gender} running {this.props.distance} meters.</p>\n          <p>Result: {this.calculate()}</p>\n          {saveButton}\n        </>\n    }\n    return (\n      <div>\n        {results}\n      </div>\n    )\n  }\n}\n\nexport default DisplayCooperResult\n","import React from 'react';\nimport {Form, Dropdown, Divider, Label} from 'semantic-ui-react'\n\nconst InputFields = (props) => {\n  const genderOptions = [\n    {text: \"Female\", value: \"female\"},\n    {text: \"Male\", value: \"male\"}\n  ]\n  return (\n    <>\n    <Form type=\"medium\">\n      <Form.Field inline>\n        <Dropdown\n          selection\n          id=\"gender\" \n          defaultValue={genderOptions[0].value}\n          options={genderOptions}\n          onChange={(e,{value}) => props.handleGenderChange(value)}\n        />\n      <Label pointing='left'>Choose your gender</Label>\n      </Form.Field>\n      \n      <Divider horizontal>Fill in distance you ran in 12 minutes, and your age</Divider>\n\n        <Form.Input\n          fluid\n          id=\"distance\"\n          placeholder=\"Distance (metres)\"\n          onChange={props.inputChangeHandler}\n        />\n\n        <Form.Input\n          fluid\n          id=\"age\"\n          placeholder=\"Age (years)\"\n          onChange={props.inputChangeHandler}\n        />\n\t\t  </Form>\n    </>\n  )\n}\n\nexport default InputFields;","import React from 'react';\nimport { Form, Button } from 'semantic-ui-react'\n\nconst LoginForm = (props) => {\n  return (\n\n    <Form type=\"medium\" id=\"login-form\">\n      <Form.Input\n        fluid\n        id=\"email\"\n        placeholder=\"Email\" \n        onChange={props.inputChangeHandler}\n      />\n\n      <Form.Input\n        fluid\n        id=\"password\"\n        placeholder=\"Password\" \n        onChange={props.inputChangeHandler}\n      />\n      \n      <Button compact color=\"teal\" onClick={(e) => props.loginHandler(e)} id=\"submit\">Submit</Button>\n    </Form>\n  )\n}\n\nexport default LoginForm;","import React, { Component } from 'react';\nimport { getData } from '../Modules/PerformanceData';\nimport { Message, Segment, Divider } from 'semantic-ui-react'\nimport { Line, Bar } from 'react-chartjs-2';\nimport moment from 'moment';\n\nclass DisplayPerformanceData extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      performanceData: null\n    }\n  }\n  componentDidMount() {\n    this.getPerformanceData()\n  }\n\n  async getPerformanceData() {\n    let result = await getData();\n    this.setState({ performanceData: result.data.entries }, () => {\n      this.props.indexUpdated();\n    })\n  }\n\n  render() {\n    let dataIndex;\n    let distances = []\n    let dates = []\n    let numOfExcellent;\n    let numOfAboveAverage;\n    let numOfAverage;\n    let numOfBelowAverage;\n    let numOfPoor;\n\n    let barChartData = {\n      labels: [\"2015-01\", \"2015-02\", \"2015-03\", \"2015-04\", \"2015-05\", \"2015-06\", \"2015-07\", \"2015-08\", \"2015-09\", \"2015-10\", \"2015-11\", \"2015-12\"],\n      datasets: [{\n        label: '# of Tomatoes',\n        data: [12, 19, 3, 5, 2, 3, 20, 3, 5, 6, 2, 1],\n        backgroundColor: [\n          'rgba(255, 99, 132, 0.2)',\n          'rgba(54, 162, 235, 0.2)',\n          'rgba(255, 206, 86, 0.2)',\n          'rgba(75, 192, 192, 0.2)',\n          'rgba(153, 102, 255, 0.2)',\n          'rgba(255, 159, 64, 0.2)',\n          'rgba(255, 99, 132, 0.2)',\n          'rgba(54, 162, 235, 0.2)',\n          'rgba(255, 206, 86, 0.2)',\n          'rgba(75, 192, 192, 0.2)',\n          'rgba(153, 102, 255, 0.2)',\n          'rgba(255, 159, 64, 0.2)'\n        ],\n        borderColor: [\n          'rgba(255,99,132,1)',\n          'rgba(54, 162, 235, 1)',\n          'rgba(255, 206, 86, 1)',\n          'rgba(75, 192, 192, 1)',\n          'rgba(153, 102, 255, 1)',\n          'rgba(255, 159, 64, 1)',\n          'rgba(255,99,132,1)',\n          'rgba(54, 162, 235, 1)',\n          'rgba(255, 206, 86, 1)',\n          'rgba(75, 192, 192, 1)',\n          'rgba(153, 102, 255, 1)',\n          'rgba(255, 159, 64, 1)'\n        ],\n        borderWidth: 1\n      }]\n      ,\n      options: {\n        responsive: false,\n        scales: {\n          xAxes: [{\n            ticks: {\n              maxRotation: 90,\n              minRotation: 80\n            }\n          }],\n          yAxes: [{\n            ticks: {\n              beginAtZero: true\n            }\n          }]\n        }\n      }\n    };\n\n    let lineChartData = {\n      datasets: [{\n        label: 'Distance over time',\n        data: distances,\n      }],\n      labels: dates\n    };\n\n    let lineChartOptions = {\n      scales: {\n        yAxes: [{\n          ticks: {\n            beginAtZero: true,\n            min: 0\n          }\n        }]\n      }\n    }\n\n\n    if (this.props.updateIndex === true) {\n      this.getPerformanceData();\n    }\n\n    if (this.state.performanceData != null) {\n      this.state.performanceData.forEach(entry => {\n        let dateString = entry.created_at;\n        let dateObj = new Date(dateString);\n        let momentObj = moment(dateObj);\n        let momentString = momentObj.format('YYYY-MM-DD');\n        distances.push(entry.data.distance);\n        dates.push(momentString);\n      })\n\n      numOfExcellent = 0;\n      for (var a = 0; a < this.state.performanceData.length; a++) {\n        if (this.state.performanceData[a].data.message === \"Excellent\")\n          numOfExcellent++;\n      }\n\n      numOfAboveAverage = 0;\n      for (var b = 0; b < this.state.performanceData.length; b++) {\n        if (this.state.performanceData[b].data.message === \"Above average\")\n          numOfAboveAverage++;\n      }\n\n      numOfAverage = 0;\n      for (var c = 0; c < this.state.performanceData.length; c++) {\n        if (this.state.performanceData[c].data.message === \"Average\")\n          numOfAverage++;\n      }\n\n      numOfBelowAverage = 0;\n      for (var d = 0; d < this.state.performanceData.length; d++) {\n        if (this.state.performanceData[d].data.message === \"Below average\")\n          numOfBelowAverage++;\n      }\n\n      numOfPoor = 0;\n      for (var e = 0; e < this.state.performanceData.length; e++) {\n        if (this.state.performanceData[e].data.message === \"Poor\")\n          numOfPoor++;\n      }\n      dataIndex = (\n        <div>\n          {this.state.performanceData.map(item => {\n            return <div key={item.id}>Your result of <b>{item.data.distance}</b> meters is <b>{item.data.message}</b></div>\n          })}\n        </div>\n      )\n    }\n\n    return (\n      <>\n        <Divider horizontal>Distance and Result log</Divider>\n        <Segment>\n          <Message>\n            {dataIndex}\n          </Message>\n        </Segment>\n\n\n        <Line\n          data={lineChartData}\n          options={lineChartOptions}\n        />\n        <Bar\n          data={barChartData}\n        // options={barChartOptions}\n        />\n\n      </>\n    )\n  }\n}\nexport default DisplayPerformanceData\n","import React, { Component } from 'react';\nimport DisplayCooperResult from './Components/DisplayCooperResult';\nimport InputFields from './Components/InputFields';\nimport LoginForm from './Components/LoginForm';\nimport { authenticate } from './Modules/Auth.js';\nimport DisplayPerformanceData from './Components/DisplayPerformanceData';\nimport { Container, Divider, Header, Segment, Button, Message } from 'semantic-ui-react'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      distance: '',\n      gender: 'female',\n      age: '',\n      renderLoginForm: false,\n      authenticated: false,\n      email: '',\n      password: '',\n      message: '',\n      entrySaved: false,\n      renderIndex: false,\n      updateIndex: ''\n    }\n  }\n\n  async onLogin(e) {\n    e.preventDefault();\n    let resp = await authenticate(this.state.email, this.state.password)\n    if (resp.authenticated === true) {\n      this.setState({ authenticated: true });\n    } else {\n      this.setState({ message: resp.message, renderLoginForm: false })\n    }\n  }\n\n  entryHandler() {\n    this.setState({ entrySaved: true, updateIndex: true });\n  }\n\n  indexUpdated() {\n    this.setState({ updateIndex: false });\n  }\n\n  handleGenderChange(value) {\n\t\tthis.setState({ gender: value})\n  }\n  \n  onChange(event) {\n    this.setState({\n      [event.target.id]: event.target.value,\n      entrySaved: false\n    })\n  }\n\n  render() {\n    let renderLogin;\n    let user;\n    let performanceDataIndex;\n\n    if (this.state.authenticated === true) {\n      user = JSON.parse(sessionStorage.getItem('credentials')).uid;\n      renderLogin = (\n        <p>Hi {user}</p>\n      )\n      if (this.state.renderIndex === true) {\n        performanceDataIndex = (\n          <>\n            <DisplayPerformanceData\n              updateIndex={this.state.updateIndex}\n              indexUpdated={this.indexUpdated.bind(this)}\n            />\n            <Button compact color=\"teal\" onClick={() => this.setState({ renderIndex: false })}>Hide past entries</Button>\n          </>\n        )\n      } else {\n        performanceDataIndex = (\n          <Button compact color=\"teal\" id=\"show-index\" onClick={() => this.setState({ renderIndex: true })}>Show past entries</Button>\n        )\n      }\n    } else {\n      if (this.state.renderLoginForm === true) {\n        renderLogin = (\n          <>\n            <LoginForm\n              loginHandler={this.onLogin.bind(this)}\n              inputChangeHandler={this.onChange.bind(this)}\n            />\n          </>\n        )\n      } else {\n        renderLogin = (\n          <>\n            <Button compact color=\"teal\" id=\"login\" onClick={() => this.setState({ renderLoginForm: true })}>Login</Button>\n            <p>{this.state.message}</p>\n          </>\n        )\n      }\n    }\n\n    return (\n      <>\n        <Container>\n            <Header as=\"h1\" textAlign=\"center\">THE COOPER TEST</Header>\n              <Divider></Divider>\n\n              <Message>\n                {renderLogin}\n              </Message>\n  \n            <Segment>\n              <InputFields\n                inputChangeHandler={this.onChange.bind(this)}\n                handleGenderChange={this.handleGenderChange.bind(this)}\n              />\n            </Segment>\n\n            <Divider horizontal>Wait for you physical assessment...</Divider>\n            \n            <Segment>\n              <Message color=\"teal\">\n              <DisplayCooperResult\n                distance={this.state.distance}\n                gender={this.state.gender}\n                age={this.state.age}\n                authenticated={this.state.authenticated}\n                entrySaved={this.state.entrySaved}\n                entryHandler={this.entryHandler.bind(this)}\n              />\n              </Message>\n            </Segment>\n            \n              {performanceDataIndex}\n           \n        </Container>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}