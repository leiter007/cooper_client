{"version":3,"sources":["Modules/CooperCalculator.js","Modules/Auth.js","Modules/PerformanceData.js","Components/DisplayCooperResult.jsx","Components/InputFields.jsx","Components/LoginForm.jsx","Components/SignUpForm.jsx","Components/DisplayPerformanceData.jsx","App.js","serviceWorker.js","index.js"],"names":["CooperCalculator","distance","gender","age","ratingIndex","ageRange","ageRangeTable","parseInt","female","13-14","15-16","17-19","20-29","30-39","40-49","50+","male","toLowerCase","forEach","dRange","index","match","slice","minMax","split","min","max","apiUrl","authenticate","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","email","password","response","wrap","_context","prev","next","axios","post","sent","storeAuthCredentials","sessionStorage","setItem","JSON","stringify","id","data","abrupt","authenticated","t0","message","errors","stop","_x","_x2","apply","this","arguments","authenticateSignUp","_ref2","_callee2","passwordConfirmation","_context2","password_confirmation","full_messages","_x3","_x4","_x5","authenticateSignOut","_ref3","_callee3","path","headers","_context3","getItem","parse","objectSpread","Content-type","Accept","delete","_ref4","Promise","resolve","uid","client","accessToken","expiry","access_token","token_type","saveData","result","reject","performance_data","then","getData","get","DisplayCooperResult","props","calculate","entryHandler","console","log","results","saveButton","entrySaved","react_default","createElement","Fragment","Button","compact","color","onClick","saveCooperData","bind","Message","Component","InputFields","genderOptions","text","value","Form","type","Field","inline","Dropdown","selection","defaultValue","options","onChange","e","handleGenderChange","Label","pointing","Divider","horizontal","Input","fluid","placeholder","inputChangeHandler","LoginForm","loginHandler","resetHandler","SignUpForm","signUpHandler","DisplayPerformanceData","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","performanceData","getPerformanceData","setState","entries","_this2","indexUpdated","dataIndex","numOfExcellent","numOfAboveAverage","numOfAverage","numOfBelowAverage","numOfPoor","perfDataLength","totalKLM","mostFrequentPerfIndex","mostFrequentPerformance","distances","dates","barChartPerfData","barChartData","labels","datasets","backgroundColor","borderColor","borderWidth","lineChartData","updateIndex","entry","dateString","created_at","dateObj","Date","momentString","moment","format","push","length","b","c","d","map","item","key","reduce","curr","Number","toFixed","indexOf","Math","bubbleStyle","width","height","Header","as","Segment","Grid","container","columns","Column","textAlign","circular","inverted","style","es","legend","display","title","fontSize","scales","yAxes","ticks","beginAtZero","responsive","App","renderLoginForm","renderSignUpForm","renderIndex","preventDefault","resp","window","clear","setTimeout","location","reload","event","_this$setState","defineProperty","target","renderLogin","renderSignUp","renderLogout","user","performanceDataIndex","errorMessage","renderSignUpMessage","hidden","onLogout","Components_DisplayPerformanceData","Components_LoginForm","onLogin","reset","Components_SignUpForm","onSignUp","Container","Icon","name","Content","Components_InputFields","Components_DisplayCooperResult","Boolean","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f3edcbb9.chunk.js","sourcesContent":["export const CooperCalculator = (distance, gender, age) => {\n\n  const ratings = [\n    'Excellent',\n    'Above average',\n    'Average',\n    'Below average',\n    'Poor'\n  ];\n\n  const cooperTable = {\n    female: {\n      '13-14': ['>2000', '1900-1999', '1600-1899', '1500-1599', '<1500'],\n      '15-16': ['>2100', '2000-2099', '1700-1999', '1600-1699', '<1600'],\n      '17-19': ['>2300', '2100-2299', '1800-2099', '1700-1799', '<1700'],\n      '20-29': ['>2700', '2200-2699', '1800-2199', '1500-1799', '<1500'],\n      '30-39': ['>2500', '2000-2499', '1700-1999', '1400-1699', '<1400'],\n      '40-49': ['>2300', '1900-2299', '1500-1899', '1200-1499', '<1200'],\n      '50+': ['>2200', '1700-2199', '1400-1699', '1100-1399', '<1100']\n    },\n    male: {\n      '13-14': ['>2700', '2400-2699', '2200-2399', '2100-2199', '<2100'],\n      '15-16': ['>2800', '2500-2799', '2300-2499', '2200-2299', '<2200'],\n      '17-19': ['>3000', '2700-2999', '2500-2699', '2300-2499', '<2300'],\n      '20-29': ['>2800', '2400-2799', '2200-2399', '1600-2199', '<1600'],\n      '30-39': ['>2700', '2300-2699', '1900-2299', '1500-1999', '<1500'],\n      '40-49': ['>2500', '2100-2499', '1700-2099', '1400-1699', '<1400'],\n      '50+': ['>2400', '2000-2399', '1600-1999', '1300-1599', '<1300']\n    }\n  };\n\n  const ageRangeTable = age => {\n    switch (true) {\n      case age >= 13 && age <= 14:\n        return '13-14';\n      case age >= 15 && age <= 16:\n        return '15-16';\n      case age >= 17 && age <= 19:\n        return '17-19';\n      case age >= 20 && age <= 29:\n        return '20-29';\n      case age >= 30 && age <= 39:\n        return '30-39';\n      case age >= 40 && age <= 49:\n        return '40-49';\n      case age >= 50:\n        return '50+';\n      default:\n        return 'invalid range';\n    }\n  }\n\n  const ageRange = ageRangeTable(parseInt(age));\n\n  if (ageRange === 'invalid range') {\n    return 'Invalid age range';\n  }\n\n  const distanceRanges = cooperTable[gender.toLowerCase()][\n    ageRange\n  ];\n\n  let ratingIndex;\n\n  distanceRanges.forEach((dRange, index) => {\n    if (\n      (dRange.match(/>\\d*/) && distance >= parseInt(dRange.slice(1), 10)) ||\n      (dRange.match(/<\\d*/) && distance < parseInt(dRange.slice(1), 10))\n    ) {\n      ratingIndex = index;\n    } else {\n      const minMax = dRange.split('-');\n      const min = parseInt(minMax[0], 10);\n      const max = parseInt(minMax[1], 10);\n\n      if (distance >= min && distance <= max) {\n        ratingIndex = index;\n      }\n    }\n  });\n  return ratings[ratingIndex];\n}\n\nexport default CooperCalculator;\n","import axios from 'axios'\n\nconst apiUrl = 'https://cooper-felix-george.herokuapp.com/api/v1';\n\nconst authenticate = async (email, password) => {\n  const path = apiUrl + '/auth/sign_in';\n  try {\n    let response = await axios.post(path, { email: email, password: password })\n    await storeAuthCredentials(response)\n    sessionStorage.setItem('current_user', JSON.stringify({ id: response.data.data.id }));\n    return { authenticated: true }\n  } catch (error) {\n    return { authenticated: false, message: error.response.data.errors[0] }\n  }\n};\n\nconst authenticateSignUp = async (email, password, passwordConfirmation) => {\n  const path = apiUrl + '/auth/';\n  try {\n    let response = await axios.post(path, { email: email, password: password, password_confirmation: passwordConfirmation })\n    await storeAuthCredentials(response)\n    sessionStorage.setItem('current_user', JSON.stringify({ id: response.data.data.id }));\n    return { authenticated: true }\n  } catch (error) {\n    return { authenticated: false, message: error.response.data.errors.full_messages[0] }\n  }\n};\n\nconst authenticateSignOut = async () => {\n  const path = apiUrl + '/auth/sign_out';\n  let headers = await sessionStorage.getItem(\"credentials\");\n  headers = JSON.parse(headers);\n  headers = {\n    ...headers,\n    \"Content-type\": \"application/json\",\n    Accept: \"application/json\"\n  };\n  try {\n    let response = await axios.delete(path, { headers: headers });\n    await storeAuthCredentials(response)\n    return { authenticated: false }\n  } catch (error) {\n    return { authenticated: true, message: error.response.data.errors[0] }\n  }\n};\n\nconst storeAuthCredentials = ({ data, headers }) => {\n  return new Promise((resolve) => {\n    const uid = headers['uid'],\n      client = headers['client'],\n      accessToken = headers['access-token'],\n      expiry = headers['expiry'];\n\n    sessionStorage.setItem('credentials', JSON.stringify({\n      uid: uid,\n      client: client,\n      access_token: accessToken,\n      expiry: expiry,\n      token_type: 'Bearer'\n    }));\n    resolve(true)\n  })\n};\n\nexport { authenticate, authenticateSignUp, authenticateSignOut, storeAuthCredentials }\n","import axios from 'axios'\nimport { storeAuthCredentials } from './Auth'\n\nconst apiUrl = 'https://cooper-felix-george.herokuapp.com/api/v1';\n\nconst saveData = async (result, distance) => {\n  let headers = await sessionStorage.getItem(\"credentials\");\n  headers = JSON.parse(headers);\n  headers = {\n    ...headers,\n    \"Content-type\": \"application/json\",\n    Accept: \"application/json\"\n  };\n  const path = apiUrl + '/performance_data';\n  return new Promise((resolve, reject) => {\n    axios.post(path, {\n      performance_data: { data: { message: result, distance: distance }}\n    }, {\n      headers: headers\n    })\n    .then(response => {\n      storeAuthCredentials(response);\n      resolve(response.data.message);\n    });  \n  });\n};\n\nconst getData = async () => {\n  let headers = await sessionStorage.getItem(\"credentials\");\n  headers = JSON.parse(headers);\n  headers = {\n    ...headers,\n    \"Content-type\": \"application/json\",\n    Accept: \"application/json\"\n  };\n  const path = apiUrl + \"/performance_data\";\n  return new Promise((resolve, reject) => {\n    axios\n      .get(path, {\n        headers: headers\n      })\n      .then(response => {\n        storeAuthCredentials(response);\n        resolve(response);\n      });\n  });\n};\n\nexport { getData, saveData }","import React, { Component } from 'react';\nimport CooperCalculator from '../Modules/CooperCalculator';\nimport {saveData} from '../Modules/PerformanceData';\nimport { Button, Message } from 'semantic-ui-react'\n\nclass DisplayCooperResult extends Component {\n\n  calculate() {\n    return CooperCalculator(this.props.distance, this.props.gender, this.props.age);\n  }\n\n  async saveCooperData() {\n    const result = this.calculate();\n    try {\n      await saveData(result, this.props.distance);\n      this.props.entryHandler();\n    } catch(error) {\n      console.log(error);\n    }\n  }\n\n  render() {\n    let results;\n    let saveButton;\n\n    if (this.props.authenticated === true && this.props.entrySaved === false) {\n      saveButton = (\n        <>\n          <Button compact color=\"teal\" id=\"save-result\" onClick={this.saveCooperData.bind(this)}>Save entry</Button>\n        </>\n      )\n    } else if (this.props.authenticated === true && this.props.entrySaved === true) {\n      saveButton = (\n        <>\n          <Message>\n            <p>Your entry was saved</p>\n          </Message>\n        </>\n      )\n    }\n\n    if (this.props.age !== '' && this.props.distance !== '') {\n      results =\n        <>\n          <p>{this.props.age} y/o {this.props.gender} running {this.props.distance} meters.</p>\n          <p>Result: {this.calculate()}</p>\n          {saveButton}\n        </>\n    }\n    return (\n      <div>\n        {results}\n      </div>\n    )\n  }\n}\n\nexport default DisplayCooperResult\n","import React from 'react';\nimport { Form, Dropdown, Divider, Label } from 'semantic-ui-react'\n\nconst InputFields = (props) => {\n  const genderOptions = [\n    { text: \"Female\", value: \"female\" },\n    { text: \"Male\", value: \"male\" }\n  ]\n  return (\n    <>\n      <Form type=\"medium\">\n        <Form.Field inline>\n          <Dropdown\n            selection\n            id=\"gender\"\n            defaultValue={genderOptions[0].value}\n            options={genderOptions}\n            onChange={(e, { value }) => props.handleGenderChange(value)}\n          />\n          <Label pointing='left'>Choose your gender</Label>\n        </Form.Field>\n\n        <Divider horizontal>Fill in distance you ran in 12 minutes and your age</Divider>\n\n        <Form.Input\n          fluid\n          id=\"distance\"\n          placeholder=\"Distance (metres)\"\n          onChange={props.inputChangeHandler}\n        />\n\n        <Form.Input\n          fluid\n          id=\"age\"\n          placeholder=\"Age (years)\"\n          onChange={props.inputChangeHandler}\n        />\n      </Form>\n    </>\n  )\n}\n\nexport default InputFields;\n","import React from 'react';\nimport { Form, Button } from 'semantic-ui-react'\n\nconst LoginForm = (props) => {\n  return (\n\n    <Form type=\"medium\" id=\"login-form\">\n      <Form.Input\n        fluid\n        id=\"email\"\n        placeholder=\"Email\"\n        onChange={props.inputChangeHandler}\n      />\n\n      <Form.Input\n        fluid\n        type=\"password\"\n        id=\"password\"\n        placeholder=\"Password\"\n        onChange={props.inputChangeHandler}\n      />\n\n      <Button compact color=\"teal\" onClick={(e) => props.loginHandler(e)} id=\"submit\">Submit</Button>\n      <Button compact color=\"teal\" onClick={(e) => props.resetHandler(e)}>Reset</Button>\n\n    </Form>\n  )\n}\n\nexport default LoginForm;","import React from 'react';\nimport { Form, Button } from 'semantic-ui-react'\n\nconst SignUpForm = (props) => {\n  return (\n\n    <Form type=\"medium\" id=\"sign-up-form\">\n      <Form.Input\n        fluid\n        id=\"email\"\n        placeholder=\"Email\"\n        onChange={props.inputChangeHandler}\n      />\n\n      <Form.Input\n        fluid\n        type=\"password\"\n        id=\"password\"\n        placeholder=\"Password\"\n        onChange={props.inputChangeHandler}\n      />\n\n      <Form.Input\n        fluid\n        type=\"password\"\n        id=\"passwordConfirmation\"\n        placeholder=\"Password Confirmation\"\n        onChange={props.inputChangeHandler}\n      />\n\n      <Button compact color=\"teal\" onClick={(e) => props.signUpHandler(e)} id=\"submit\">Submit</Button>\n      <Button compact color=\"teal\" onClick={(e) => props.resetHandler(e)}>Reset</Button>\n\n    </Form>\n  )\n}\n\nexport default SignUpForm;\n","import React, { Component } from 'react';\nimport { getData } from '../Modules/PerformanceData';\nimport { Message, Segment, Divider, Grid, Header } from 'semantic-ui-react'\nimport { Line, Bar } from 'react-chartjs-2';\nimport moment from 'moment';\n\nclass DisplayPerformanceData extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      performanceData: null\n    }\n  }\n  componentDidMount() {\n    this.getPerformanceData()\n  }\n\n  async getPerformanceData() {\n    let result = await getData();\n    this.setState({ performanceData: result.data.entries }, () => {\n      this.props.indexUpdated();\n    })\n  }\n\n  render() {\n    let dataIndex;\n    let distances = []\n    let dates = []\n    let numOfExcellent;\n    let numOfAboveAverage;\n    let numOfAverage;\n    let numOfBelowAverage;\n    let numOfPoor;\n    let barChartPerfData = []\n    let perfDataLength;\n    let totalM;\n    let totalKLM;\n    let mostFrequentPerfIndex;\n    let mostFrequentPerformance;\n\n    let barChartData = {\n      labels: [\"Excellent\", \"Above Average\", \"Average\", \"Below Average\", \"Poor\"],\n      datasets: [{\n        data: barChartPerfData,\n        backgroundColor: [\n          'rgba(255, 99, 132, 0.2)',\n          'rgba(54, 162, 235, 0.2)',\n          'rgba(255, 206, 86, 0.2)',\n          'rgba(75, 192, 192, 0.2)',\n          'rgba(153, 102, 255, 0.2)'\n        ],\n        borderColor: [\n          'rgba(255,99,132,1)',\n          'rgba(54, 162, 235, 1)',\n          'rgba(255, 206, 86, 1)',\n          'rgba(75, 192, 192, 1)',\n          'rgba(153, 102, 255, 1)'\n        ],\n        borderWidth: 1\n      }]\n    }\n\n    let barChartOptions = {\n      responsive: true,\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: 'Performance Status',\n        fontSize: 16\n      },\n      scales: {\n        yAxes: [{\n          ticks: {\n            beginAtZero: true,\n            min: 0\n          }\n        }]\n      }\n    }\n\n    let lineChartData = {\n      datasets: [{\n        data: distances,\n      }],\n      labels: dates\n    };\n\n    let lineChartOptions = {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: 'Distance over time',\n        fontSize: 16\n      },\n      scales: {\n        yAxes: [{\n          ticks: {\n            beginAtZero: true,\n            min: 0\n          }\n        }]\n      }\n    }\n\n    if (this.props.updateIndex === true) {\n      this.getPerformanceData();\n    }\n\n    if (this.state.performanceData != null) {\n      this.state.performanceData.forEach(entry => {\n        let dateString = entry.created_at;\n        let dateObj = new Date(dateString);\n        let momentObj = moment(dateObj);\n        let momentString = momentObj.format('YY-MM-DD');\n        distances.push(entry.data.distance);\n        dates.push(momentString);\n      })\n\n      numOfExcellent = 0;\n      for (var a = 0; a < this.state.performanceData.length; a++) {\n        if (this.state.performanceData[a].data.message === \"Excellent\")\n          numOfExcellent++;\n      }\n\n      numOfAboveAverage = 0;\n      for (var b = 0; b < this.state.performanceData.length; b++) {\n        if (this.state.performanceData[b].data.message === \"Above average\")\n          numOfAboveAverage++;\n      }\n\n      numOfAverage = 0;\n      for (var c = 0; c < this.state.performanceData.length; c++) {\n        if (this.state.performanceData[c].data.message === \"Average\")\n          numOfAverage++;\n      }\n\n      numOfBelowAverage = 0;\n      for (var d = 0; d < this.state.performanceData.length; d++) {\n        if (this.state.performanceData[d].data.message === \"Below average\")\n          numOfBelowAverage++;\n      }\n\n      numOfPoor = 0;\n      for (var e = 0; e < this.state.performanceData.length; e++) {\n        if (this.state.performanceData[e].data.message === \"Poor\")\n          numOfPoor++;\n      }\n\n      barChartPerfData.push(numOfExcellent);\n      barChartPerfData.push(numOfAboveAverage);\n      barChartPerfData.push(numOfAverage);\n      barChartPerfData.push(numOfBelowAverage);\n      barChartPerfData.push(numOfPoor);\n      dataIndex = (\n        <div>\n          {this.state.performanceData.map(item => {\n            return <div key={item.id}>Your result of <b>{item.data.distance}</b> meters is <b>{item.data.message}</b></div>\n          })}\n        </div>\n      )\n\n      perfDataLength = this.state.performanceData.length;\n\n      if (distances.length === 0) {\n        totalKLM = 0\n      } else {\n        totalM = distances.reduce(function (prev, curr) {\n          return (Number(prev) || 0) + (Number(curr) || 0);\n        });\n        totalKLM = (totalM / 1000).toFixed(2)\n      }\n\n      mostFrequentPerfIndex = barChartPerfData.indexOf(Math.max(...barChartPerfData))\n      if (distances.length === 0 && mostFrequentPerfIndex === 0) {\n        mostFrequentPerformance = \"still to be discovered\"\n      } else if (mostFrequentPerfIndex === 0) {\n        mostFrequentPerformance = \"Excellent\"\n      } else if (mostFrequentPerfIndex === 1) {\n        mostFrequentPerformance = \"Above Average\"\n      } else if (mostFrequentPerfIndex === 2) {\n        mostFrequentPerformance = \"Average\"\n      } else if (mostFrequentPerfIndex === 3) {\n        mostFrequentPerformance = \"Below Average\"\n      } else if (mostFrequentPerfIndex === 4) {\n        mostFrequentPerformance = \"Poor\"\n      } else {\n        mostFrequentPerformance = \"\"\n      }\n    }\n\n    const bubbleStyle = { width: 200, height: 80 }\n\n    return (\n      <>\n        <Divider horizontal>\n          <Header as=\"h3\">\n            RESULT DASHBOARD\n          </Header>\n        </Divider>\n\n        <Segment>\n          <Grid container columns={2}>\n            <Grid.Column>\n              <Message>\n                <Header as=\"h3\">\n                  Result log\n                </Header>\n                <Divider></Divider>\n                {dataIndex}\n              </Message>\n            </Grid.Column>\n\n            <Grid.Column>\n              <Segment>\n                <Header textAlign=\"right\" as='h3'>\n                  Your total distance covered is\n                </Header>\n                <Divider></Divider>\n\n                <Segment circular inverted style={bubbleStyle} color=\"teal\">\n                  <Header as='h1'>\n                    {totalKLM}km\n                      </Header>\n                </Segment>\n\n                <Header textAlign=\"right\" as='h3'>\n                  Your total number of runs is\n                  </Header>\n                <Divider></Divider>\n                <Segment circular inverted style={bubbleStyle} color=\"teal\">\n                  <Header as='h1'>\n                    {perfDataLength}\n                  </Header>\n                </Segment>\n\n                <Header textAlign=\"right\" as='h3'>\n                  Your most frequent result is\n                  </Header>\n                <Divider></Divider>\n                <Segment circular inverted style={bubbleStyle} color=\"teal\">\n                  <Header as='h1'>\n                    {mostFrequentPerformance}\n                  </Header>\n                </Segment>\n              </Segment>\n\n            </Grid.Column>\n          </Grid>\n        </Segment>\n\n        <Segment>\n          <Grid container columns={2}>\n            <Grid.Column>\n              <Line\n                data={lineChartData}\n                options={lineChartOptions}\n              />\n            </Grid.Column>\n            <Grid.Column>\n              <Bar\n                data={barChartData}\n                options={barChartOptions}\n              />\n            </Grid.Column>\n          </Grid>\n        </Segment>\n\n      </>\n    )\n  }\n}\nexport default DisplayPerformanceData\n","import React, { Component } from 'react';\nimport DisplayCooperResult from './Components/DisplayCooperResult';\nimport InputFields from './Components/InputFields';\nimport LoginForm from './Components/LoginForm';\nimport SignUpForm from './Components/SignUpForm';\nimport { authenticate, authenticateSignUp, authenticateSignOut } from './Modules/Auth.js';\nimport DisplayPerformanceData from './Components/DisplayPerformanceData';\nimport { Container, Grid, Divider, Header, Segment, Button, Message, Icon } from 'semantic-ui-react'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      distance: '',\n      gender: 'female',\n      age: '',\n      renderLoginForm: false,\n      renderSignUpForm: false,\n      authenticated: false,\n      email: '',\n      password: '',\n      passwordConfirmation: '',\n      message: '',\n      entrySaved: false,\n      renderIndex: false,\n      updateIndex: ''\n    }\n  }\n\n  async onLogin(e) {\n    e.preventDefault();\n    let resp = await authenticate(this.state.email, this.state.password)\n    if (resp.authenticated === true) {\n      this.setState({ authenticated: true });\n    } else {\n      this.setState({ message: resp.message, renderLoginForm: false })\n    }\n  }\n\n  async onSignUp(e) {\n    e.preventDefault();\n    let resp = await authenticateSignUp(this.state.email, this.state.password, this.state.passwordConfirmation)\n    if (resp.authenticated === true) {\n      this.setState({ authenticated: true });\n    } else {\n      this.setState({ message: resp.message, renderSignUpForm: false })\n    }\n  }\n\n  async onLogout(e) {\n    e.preventDefault();\n    let resp = await authenticateSignOut()\n    if (resp.authenticated === false) {\n      this.setState({ authenticated: false });\n      window.sessionStorage.clear();\n      this.setState({ message: \"You have successfuly logged out.\" });\n      this.setState({ renderLoginForm: false });\n      this.setState({ renderSignUpForm: false });\n      setTimeout(function () { window.location.reload(\"true\"); }, 2000);\n    } else {\n      this.setState({ message: resp.message })\n    }\n  }\n\n  entryHandler() {\n    this.setState({ entrySaved: true, updateIndex: true });\n  }\n\n  indexUpdated() {\n    this.setState({ updateIndex: false });\n  }\n\n  handleGenderChange(value) {\n    this.setState({ gender: value })\n  }\n\n  onChange(event) {\n    this.setState({\n      [event.target.id]: event.target.value,\n      entrySaved: false\n    })\n  }\n\n  reset(e) {\n    window.location.reload(true);\n  }\n\n  render() {\n    let renderLogin;\n    let renderSignUp;\n    let renderLogout;\n    let user;\n    let performanceDataIndex;\n    let errorMessage;\n    let renderSignUpMessage;\n\n    if (this.state.authenticated === true) {\n      user = JSON.parse(sessionStorage.getItem('credentials')).uid;\n      renderLogin = (\n        <p><b>Hi {user}</b></p>\n      )\n      renderSignUpMessage = (\n        <Message hidden>\n          {renderSignUp}\n        </Message>\n      )\n      renderLogout = (\n        <Button compact color=\"teal\" id=\"logout\" onClick={this.onLogout.bind(this)}>Logout</Button>\n      )\n\n      if (this.state.renderIndex === true) {\n        performanceDataIndex = (\n          <>\n            <DisplayPerformanceData\n              updateIndex={this.state.updateIndex}\n              indexUpdated={this.indexUpdated.bind(this)}\n            />\n            <Button compact color=\"teal\" onClick={() => this.setState({ renderIndex: false })}>Hide past entries</Button>\n          </>\n        )\n      } else {\n        performanceDataIndex = (\n          <Button compact color=\"teal\" id=\"show-index\" onClick={() => this.setState({ renderIndex: true })}>Show past entries</Button>\n        )\n      }\n    } else {\n      if (this.state.renderLoginForm === true && this.state.renderSignUpForm === false) {\n        renderLogin = (\n          <>\n            <LoginForm\n              loginHandler={this.onLogin.bind(this)}\n              inputChangeHandler={this.onChange.bind(this)}\n              resetHandler={this.reset.bind(this)}\n            />\n          </>\n        )\n        renderSignUp = (\n          <Button compact color=\"teal\" id=\"sign-up\" onClick={() => this.setState({ renderSignUpForm: true, renderLoginForm: false, message: '' })}>Sign Up</Button>\n        )\n        renderSignUpMessage = (\n          <Message>\n            {renderSignUp}\n          </Message>\n        )\n      } else if (this.state.renderLoginForm === false && this.state.renderSignUpForm === true) {\n        renderLogin = (\n          <>\n            <Button compact color=\"teal\" id=\"login\" onClick={() => this.setState({ renderLoginForm: true, renderSignUpForm: false, message: '' })}>Login</Button>\n          </>\n        )\n        renderSignUp = (\n          <SignUpForm\n            signUpHandler={this.onSignUp.bind(this)}\n            inputChangeHandler={this.onChange.bind(this)}\n            resetHandler={this.reset.bind(this)}\n          />\n        )\n        renderSignUpMessage = (\n          <Message>\n            {renderSignUp}\n          </Message>\n        )\n      } else {\n        renderLogin = (\n          <>\n            <Button compact color=\"teal\" id=\"login\" onClick={() => this.setState({ renderLoginForm: true, renderSignUpForm: false, message: '' })}>Login</Button>\n          </>\n        )\n        renderSignUp = (\n          <>\n            <Button compact color=\"teal\" id=\"sign-up\" onClick={() => this.setState({ renderSignUpForm: true, renderLoginForm: false, message: '' })}>Sign Up</Button>\n          </>\n        )\n        renderSignUpMessage = (\n          <Message>\n            {renderSignUp}\n          </Message>\n        )\n      }\n    }\n    if (this.state.authenticated === true) {\n      errorMessage = ''\n    } else if (this.state.authenticated === false && this.state.message !== '') {\n      errorMessage = (\n        <Message color=\"red\">\n          <p><b>{this.state.message}</b></p>\n        </Message>\n      )\n    }\n\n    return (\n      <>\n        <Container>\n          <Header as=\"h1\">\n            <Icon name=\"doctor\" />\n            <Header.Content>\n              THE COOPER TEST\n                </Header.Content>\n          </Header>\n\n          <Divider></Divider>\n\n          <Segment>\n            <Grid container columns={2}>\n              <Grid.Column>\n                <Message>\n                  {renderLogin}\n                </Message>\n              </Grid.Column>\n              <Grid.Column>\n                {renderSignUpMessage}\n                {renderLogout}\n              </Grid.Column>\n            </Grid>\n            {errorMessage}\n          </Segment>\n\n          <Segment>\n            <InputFields\n              inputChangeHandler={this.onChange.bind(this)}\n              handleGenderChange={this.handleGenderChange.bind(this)}\n            />\n          </Segment>\n\n          <Divider horizontal>Wait for your physical assessment...</Divider>\n\n          <Segment>\n            <Message color=\"teal\">\n              <DisplayCooperResult\n                distance={this.state.distance}\n                gender={this.state.gender}\n                age={this.state.age}\n                authenticated={this.state.authenticated}\n                entrySaved={this.state.entrySaved}\n                entryHandler={this.entryHandler.bind(this)}\n              />\n            </Message>\n          </Segment>\n\n          {performanceDataIndex}\n\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}